server:
  port: 8081
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/user-service
    username: postgres
    password: rohitman45*
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: User-Service
  config:
    import: configserver:http://localhost:8085
  security:
    oauth2:
      resourceserver:
        jwt:
          audiences: api://default
          issuer-uri: https://dev-31816752.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oabnsgvyoUYz3E065d7
            client-secret: Wi1Os2Fa46Smfmk57JuACeJmF_jTieSWhM_hAlYt6rHzViWT6ATvjhLI77Xa6VvR
        provider:
          okta:
            issuer-uri: https://dev-31816752.okta.com/oauth2/default
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
resilience4j:
  # Circuit breaker
  circuitbreaker:
    instances:
      RATING_HOTEL_BREAKER:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 100
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 60000
        permitted-number-of-calls-in-half-open-state: 10
        sliding-window-size: 100
        sliding-window-type: COUNT_BASED
  #Retry configuration
  retry:
    instances:
      RATING_HOTEL_SERVICE:
        max-attempts: 3
        wait-duration: 5000
  # Rate Limiter Configuration

  ratelimiter:
    instances:
      RATING_HOTEL_LIMITER:
        timeout-duration: 5000
        limit-for-period: 50
        limit-refresh-period: 5
okta:
  oauth2:
    issuer: https://dev-31816752.okta.com/oauth2/default
    audience: api://default